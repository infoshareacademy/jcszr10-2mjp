@using DateTimeExtensions;
@using System.Globalization;
@using VacationCalendar.BusinessLogic.Models;
@using DateTimeExtensions.WorkingDays;

@{
    DateTime currentDate = DateTime.Now;
    string currentMonthAndYear = currentDate.ToString("MMMM yyyy");  
}

@for(int i = 0; i < 4; i++)
{
    <span>@currentDate.AddMonths(i).ToString("MMMM yyyy");</span>
    <br />
    <div class="monthContainer">
        @for (int day = 1; day <= DateTime.DaysInMonth(currentDate.AddMonths(i).Year, currentDate.AddMonths(i).Month); day++)
        {
            DateTime nextMonthFirstDay = new DateTime(currentDate.AddMonths(i).Year, currentDate.AddMonths(i).Month, 1);
            DateTime currentDay = nextMonthFirstDay.AddDays(day - 1);
            bool isWorkingDay = currentDay.IsWorkingDay();

            <div class="daySquare @(isWorkingDay ? "" : "holiday") @((i==0) ? (currentDay.Date == currentDate.Date ? "today" : "") : "")">
                <div>@currentDay.ToString("ddd")</div>
                <div>@day</div>
            </div>
        }
    </div>
    <hr />
}





